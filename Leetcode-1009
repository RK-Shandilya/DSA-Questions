// Approach 1 :- by masking method

class Solution {
public:
    int bitwiseComplement(int n) {
        int mask=0;
        int m=n;
        if(n==0){
            return 1;
        }
        while(m!=0){
            mask = (mask << 1)|1;
            m=m>>1;
        }
        int ans = (~n) & mask;
        return ans;
    }
};


// Approach 2 :- Using XOR
class Solution {
public:
    int bitwiseComplement(int n) {
        int x=1;
        if(n==0){
            return 1;
        }
        while(x<=n){
            n=n^x;
            x=x<<1;
        }
        return n;
    }
};
